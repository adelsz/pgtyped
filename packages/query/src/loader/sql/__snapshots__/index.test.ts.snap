// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Another test 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "GetBooksByAuthorName",
      "params": Array [
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 161,
                "b": 170,
                "col": 48,
                "line": 5,
              },
            ],
          },
          "name": "authorName",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
      ],
      "statement": Object {
        "body": "SELECT b.* FROM books b
    INNER JOIN authors a ON a.id = b.author_id
    WHERE a.first_name || ' ' || a.last_name = :authorName",
        "loc": Object {
          "a": 42,
          "b": 170,
          "col": 4,
          "line": 3,
        },
      },
      "usedParamSet": Object {
        "authorName": true,
      },
    },
  ],
}
`;

exports[`Comment starts in strings are ignored 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "UpdateBooks",
      "params": Array [
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 72,
                "b": 75,
                "col": 30,
                "line": 4,
              },
            ],
          },
          "name": "rank",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 89,
                "b": 90,
                "col": 47,
                "line": 4,
              },
            ],
          },
          "name": "id",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
      ],
      "statement": Object {
        "body": "UPDATE books
  SET name = '-- /*', rank = :rank WHERE id = :id",
        "loc": Object {
          "a": 29,
          "b": 90,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {
        "id": true,
        "rank": true,
      },
    },
  ],
}
`;

exports[`Double and single quotes are supported 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "GetAllUsers",
      "params": Array [],
      "statement": Object {
        "body": "SELECT u.\\"rank\\" FROM users u where name = 'some-name'",
        "loc": Object {
          "a": 29,
          "b": 81,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {},
    },
  ],
}
`;

exports[`Ignore multi-line comments in queries 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "UpdateBooks",
      "params": Array [
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 91,
                "b": 94,
                "col": 14,
                "line": 5,
              },
            ],
          },
          "name": "name",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 105,
                "b": 108,
                "col": 28,
                "line": 5,
              },
            ],
          },
          "name": "rank",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 122,
                "b": 123,
                "col": 45,
                "line": 5,
              },
            ],
          },
          "name": "id",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
      ],
      "statement": Object {
        "body": "UPDATE books
                                  
  SET name = :name, rank = :rank WHERE id = :id",
        "loc": Object {
          "a": 29,
          "b": 123,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {
        "id": true,
        "name": true,
        "rank": true,
      },
    },
  ],
}
`;

exports[`Ignore params in inline single-line comments in queries 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "UpdateBooks",
      "params": Array [
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 88,
                "b": 91,
                "col": 14,
                "line": 5,
              },
            ],
          },
          "name": "name",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 102,
                "b": 105,
                "col": 28,
                "line": 5,
              },
            ],
          },
          "name": "rank",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 119,
                "b": 120,
                "col": 45,
                "line": 5,
              },
            ],
          },
          "name": "id",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
      ],
      "statement": Object {
        "body": "UPDATE books
  -- ignored comment foo: bar's
  SET name = :name, rank = :rank WHERE id = :id",
        "loc": Object {
          "a": 29,
          "b": 120,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {
        "id": true,
        "name": true,
        "rank": true,
      },
    },
  ],
}
`;

exports[`Include inline single-line comments in statement body 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "UpdateBooks",
      "params": Array [
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 101,
                "b": 104,
                "col": 14,
                "line": 6,
              },
            ],
          },
          "name": "name",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 115,
                "b": 118,
                "col": 28,
                "line": 6,
              },
            ],
          },
          "name": "rank",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 132,
                "b": 133,
                "col": 45,
                "line": 6,
              },
            ],
          },
          "name": "id",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
      ],
      "statement": Object {
        "body": "-- Inline comment 1
  UPDATE books
  -- Inline comment 2:
  SET name = :name, rank = :rank WHERE id = :id
  -- Inline comment 3
",
        "loc": Object {
          "a": 29,
          "b": 156,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {
        "id": true,
        "name": true,
        "rank": true,
      },
    },
  ],
}
`;

exports[`Named query 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "GetAllUsers",
      "params": Array [],
      "statement": Object {
        "body": "SELECT * FROM users",
        "loc": Object {
          "a": 29,
          "b": 47,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {},
    },
  ],
}
`;

exports[`Named query selects some fields 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "GetAllUsers",
      "params": Array [],
      "statement": Object {
        "body": "SELECT id, name FROM users",
        "loc": Object {
          "a": 29,
          "b": 54,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {},
    },
  ],
}
`;

exports[`Named query with a valid param 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "CreateCustomer",
      "params": Array [
        Object {
          "codeRefs": Object {
            "defined": Object {
              "a": 42,
              "b": 50,
              "col": 11,
              "line": 4,
            },
            "used": Array [
              Object {
                "a": 170,
                "b": 178,
                "col": 10,
                "line": 7,
              },
            ],
          },
          "name": "customers",
          "required": false,
          "transform": Object {
            "keys": Array [
              Object {
                "name": "customerName",
                "required": false,
              },
              Object {
                "name": "contactName",
                "required": false,
              },
              Object {
                "name": "address",
                "required": false,
              },
            ],
            "type": "pick_tuple",
          },
        },
      ],
      "statement": Object {
        "body": "INSERT INTO customers (customer_name, contact_name, address)
  VALUES :customers",
        "loc": Object {
          "a": 99,
          "b": 178,
          "col": 2,
          "line": 6,
        },
      },
      "usedParamSet": Object {
        "customers": true,
      },
    },
  ],
}
`;

exports[`Named query with an inferred param 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "GetUserById",
      "params": Array [
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 65,
                "b": 70,
                "col": 38,
                "line": 3,
              },
            ],
          },
          "name": "userId",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
      ],
      "statement": Object {
        "body": "SELECT * FROM users WHERE userId = :userId",
        "loc": Object {
          "a": 29,
          "b": 70,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {
        "userId": true,
      },
    },
  ],
}
`;

exports[`Named query with pick param used twice 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "CreateCustomer",
      "params": Array [
        Object {
          "codeRefs": Object {
            "defined": Object {
              "a": 42,
              "b": 50,
              "col": 11,
              "line": 4,
            },
            "used": Array [
              Object {
                "a": 170,
                "b": 178,
                "col": 10,
                "line": 7,
              },
              Object {
                "a": 182,
                "b": 190,
                "col": 22,
                "line": 7,
              },
            ],
          },
          "name": "customers",
          "required": false,
          "transform": Object {
            "keys": Array [
              Object {
                "name": "customerName",
                "required": false,
              },
              Object {
                "name": "contactName",
                "required": false,
              },
              Object {
                "name": "address",
                "required": false,
              },
            ],
            "type": "pick_tuple",
          },
        },
      ],
      "statement": Object {
        "body": "INSERT INTO customers (customer_name, contact_name, address)
  VALUES :customers, :customers",
        "loc": Object {
          "a": 99,
          "b": 190,
          "col": 2,
          "line": 6,
        },
      },
      "usedParamSet": Object {
        "customers": true,
      },
    },
  ],
}
`;

exports[`Named query with two inferred params 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "GetUserById",
      "params": Array [
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 65,
                "b": 70,
                "col": 38,
                "line": 3,
              },
              Object {
                "a": 87,
                "b": 92,
                "col": 60,
                "line": 3,
              },
            ],
          },
          "name": "userId",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
      ],
      "statement": Object {
        "body": "SELECT * FROM users WHERE userId = :userId or parentId = :userId",
        "loc": Object {
          "a": 29,
          "b": 92,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {
        "userId": true,
      },
    },
  ],
}
`;

exports[`Postgres cast operator is correctly parsed 1`] = `
Object {
  "events": Array [],
  "queries": Array [
    Object {
      "name": "GetAllUsers",
      "params": Array [
        Object {
          "codeRefs": Object {
            "used": Array [
              Object {
                "a": 72,
                "b": 75,
                "col": 45,
                "line": 3,
              },
            ],
          },
          "name": "name",
          "required": false,
          "transform": Object {
            "type": "scalar",
          },
        },
      ],
      "statement": Object {
        "body": "SELECT u.\\"rank\\" FROM users u where name = :name::text",
        "loc": Object {
          "a": 29,
          "b": 81,
          "col": 2,
          "line": 3,
        },
      },
      "usedParamSet": Object {
        "name": true,
      },
    },
  ],
}
`;

exports[`Unused parameters produce warnings 1`] = `
Object {
  "events": Array [
    Object {
      "location": Object {
        "a": 39,
        "b": 47,
        "col": 11,
        "line": 4,
      },
      "message": Object {
        "text": "Parameter \\"userNames\\" is defined but never used",
        "type": 0,
      },
      "type": 1,
    },
    Object {
      "location": Object {
        "a": 69,
        "b": 73,
        "col": 11,
        "line": 5,
      },
      "message": Object {
        "text": "Parameter \\"users\\" is defined but never used",
        "type": 0,
      },
      "type": 1,
    },
  ],
  "queries": Array [
    Object {
      "name": "GetAllUsers",
      "params": Array [
        Object {
          "codeRefs": Object {
            "defined": Object {
              "a": 39,
              "b": 47,
              "col": 11,
              "line": 4,
            },
            "used": Array [],
          },
          "name": "userNames",
          "transform": Object {
            "type": "array_spread",
          },
        },
        Object {
          "codeRefs": Object {
            "defined": Object {
              "a": 69,
              "b": 73,
              "col": 11,
              "line": 5,
            },
            "used": Array [],
          },
          "name": "users",
          "transform": Object {
            "keys": Array [
              Object {
                "name": "name",
                "required": false,
              },
              Object {
                "name": "time",
                "required": false,
              },
            ],
            "type": "pick_array_spread",
          },
        },
      ],
      "statement": Object {
        "body": "SELECT * FROM users",
        "loc": Object {
          "a": 102,
          "b": 120,
          "col": 2,
          "line": 7,
        },
      },
      "usedParamSet": Object {},
    },
  ],
}
`;
